name: Tests

on: 
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v3
  src:
   runs-on: ubuntu-latest
   container:
     image: openjdk:17-jdk-slim-buster
     options: --user root
   steps:
     - name: Checkout ${{ github.event.repository.name }}
       uses: actions/checkout@v3
     - name: Set up Maven
       uses: stCarolas/setup-maven@v4.5
       with:
        maven-version: 3.8.2      
     - name: Build
       run: |
         cd $GITHUB_WORKSPACE
         ls -ls && pwd
         mvn -e -X clean org.jacoco:jacoco-maven-plugin:prepare-agent package
         mvn -e -X clean org.jacoco:jacoco-maven-plugin:report package
     - name: Archive code coverage results
       uses: actions/upload-artifact@v3
       with:
         name: jpo-security-svcs
         path: /__w/jpo-security-svcs/jpo-security-svcs/target
         if-no-files-found: error
  tmca-tester_coverage:
      runs-on: ubuntu-latest
      container:
        image: node:16.16.0
        options: --user root
        env:
          CI: true
      steps:
        - name: Checkout ${{ github.event.repository.name }}
          uses: actions/checkout@v3
        - name: Build
          run: |
            cd $GITHUB_WORKSPACE/tmca-tester
            ls -la && pwd
            npm install node-menu@1.3.2
            npm install -g nodemon
            npm init -y
            npm install --force
  sonar:
    needs: [src, tmca-tester_coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: chmod +x -R /__w/jpo-security-svcs/jpo-security-svcs/target          
      - name: Download code coverage results
        uses: actions/download-artifact@v3
        with:
          name: jpo-security-svcs
          path: /__w/jpo-security-svcs/jpo-security-svcs/target 
      - name: Setup SonarScanner
        uses: warchant/setup-sonar-scanner@v4
        with:
          version: 4.8.0.2856
      - name: Generate sonar properties file
        run: |
          cat <<EOF > /tmp/sonar-scanner.properties
          sonar.host.url=https://sonarcloud.io
          sonar.coverage.jacoco.xmlReportPaths=$GITHUB_WORKSPACE/tmca-tester/target/site/jacoco/jacoco.xml
          sonar.java.binaries=$GITHUB_WORKSPACE/jpo-security-svcs/
          sonar.modules=src,tmca-tester
          sonar.projectBaseDir=$GITHUB_WORKSPACE
          sonar.projectKey=usdot-jpo-ode_jpo-security-svcs
          sonar.organization=usdot-jpo-ode-1
          tmca-tester.sonar.projectBaseDir=$GITHUB_WORKSPACE/tmca-tester
          tmca-tester.sonar.sources=src
          sonar.modules=jpo-security-svcs
          jpo-security-svcs.sonar.projectBaseDir  = $GITHUB_WORKSPACE
          jpo-security-svcs.sonar.sources         = src
          EOF
      - name: Run SonarScanner
        uses: usdot-fhwa-stol/actions/sonar-scanner@main
        with:
          sonar-properties-path: /tmp/sonar-scanner.properties
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          working-dir: $GITHUB_WORKSPACE
